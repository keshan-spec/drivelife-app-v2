<template>
    <div class="page" data-name="profile-view">
        <div class="navbar">
            <div class="navbar-bg"></div>
            <div class="navbar-inner">
                <div class="left">
                    <a class="link back">
                        <i class="icon icon-back"></i>
                    </a>
                </div>
                <div class="middle">
                    <div class="header-logo"><img src="img/logo-dark.png" /></div>
                </div>
                <div class="right">
                    <a href="#" class="link icon-only open-qr-modal">
                        <i class="icon f7-icons open-qr-modal">qrcode</i>
                    </a>
                </div>
            </div>
        </div>

        <div class="page-content profile-landing-page infinite-scroll-content view-page ptr-content ptr-watch-scrollable profile-view"
            data-infinite-distance="50" data-ptr-distance="130">
            <div id="profile-view-container">
                <div class="ptr-preloader">
                    <div class="preloader"></div>
                    <div class="ptr-arrow"></div>
                </div>

                <div class="loading-fullscreen">
                    <div class="preloader preloader-central">
                        <span class="preloader-inner"><span class="preloader-inner-line"></span><span
                                class="preloader-inner-line"></span><span class="preloader-inner-line"></span><span
                                class="preloader-inner-line"></span><span class="preloader-inner-line"></span><span
                                class="preloader-inner-line"></span><span class="preloader-inner-line"></span><span
                                class="preloader-inner-line"></span>
                        </span>
                    </div>
                </div>

                <div class="profile-background" style="background-color:gray;">
                </div>

                <div class="profile-head">
                    <div class="profile-image" style="background-color: gray;"></div>
                    <div class="profile-user-info">
                        <div class="profile-usernames">
                            <h3 class="name profile-username">@</h3>
                            <h5 class="subtext profile-name"></h5>
                        </div>

                        <div class="pview profile-followers">
                            <h3></h3>
                            <h5 class="subtext">Followers</h5>
                        </div>

                        <div class="profile-posts">
                            <h3></h3>
                            <h5 class="subtext">Posts</h5>
                        </div>
                        <div class="clearfix"></div>
                    </div>

                    <div class="mt-12">
                        <div class="btn w-100 bg-dark user-follow-btn">
                            <div class="skeleton-block" style="width: 80px"></div>
                        </div>
                    </div>
                </div>

                <div class="profile-links">
                    <div class="profile-links-external d-flex">
                        <a class="profile-link social-link link external " id="instagram" target="_blank"
                            href="https://www.instagram.com/"><img src="img/icon-instagram.svg" />
                            <span>Instagram</span></a>
                        <a class="profile-link social-link link external " id="facebook" target="_blank"
                            href="https://www.facebook.com"><img src="img/icon-facebook.svg" />
                            <span>Facebook</span></a>
                        <a class="profile-link social-link link external " id="tiktok" target="_blank"
                            href="https://www.tiktok.com"><img src="img/icon-tiktok.svg" /> <span>Tiktok</span></a>
                        <a class="profile-link social-link link external " id="youtube" target="_blank"
                            href="https://www.youtube.com"><img src="img/icon-youtube.svg" />
                            <span>YouTube</span></a>
                        <a class="profile-link social-link popup-open" data-popup=".links-popup"><img
                                src="img/icon-link.svg?v=1.4" />
                            <span>More</span></a>
                    </div>
                </div>

                <div class="profile-lower">
                    <div class="profile-tabs">
                        <a href="#profileview-posts-tab" class="tab-link tab-link-active" id="my-posts">Posts</a>
                        <a href="#profileview-garage-tab" class="tab-link" id="my-garage">Garage</a>
                        <a href="#profileview-tags-tab" class="tab-link" id="my-tags">Tags</a>
                    </div>

                    <swiper-container class="tabs">

                        <swiper-slide id="profileview-posts-tab" class="tab  tab-active">
                            <div class="swiper-inner-container">
                                <div class="profile-grid list virtual-list" id="profile-view-grid-posts">
                                    <!-- Content generates here -->
                                </div>

                                <!-- Preloader for infinite scroll -->
                                <div class="infinite-scroll-preloader posts-tab view-profile">
                                    <div class="preloader"></div>
                                </div>
                            </div>
                        </swiper-slide>

                        <swiper-slide id="profileview-garage-tab" class="tab">
                            <div class="swiper-inner-container">
                                <div class="listview-title garage-sub-title">Current Vehicles</div>

                                <ul
                                    class="listview image-listview media transparent flush pt-1 pview-current-vehicles-list">
                                    <!-- Content generates here -->
                                </ul>

                                <div class="listview-title garage-sub-title mt-2">Past Vehicles</div>
                                <ul
                                    class="listview image-listview media transparent flush pt-1 pview-past-vehicles-list">
                                    <!-- Content generates here -->
                                </ul>

                            </div>
                        </swiper-slide>


                        <swiper-slide id="profileview-tags-tab" class="tab">
                            <div class="swiper-inner-container">
                                <div class="profile-grid list virtual-list" id="profile-view-grid-tags">
                                    <!-- Content generates here -->
                                </div>

                                <!-- Preloader for infinite scroll -->
                                <div class="infinite-scroll-preloader tags-tab view-profile">
                                    <div class="preloader"></div>
                                </div>
                            </div>
                        </swiper-slide>
                    </swiper-container>
                </div>
            </div>

            <div class="popup links-popup three-quarter-popup">
                <div class="view">
                    <div class="page">
                        <div class="navbar">
                            <div class="navbar-inner">
                                <div class="title">More Links</div>
                                <div class="right">
                                    <!-- Link to close popup -->
                                    <a class="link popup-close"><i class="icon f7-icons">xmark</i></a>
                                </div>
                            </div>
                        </div>
                        <div class="page-content">
                            <div class="block profile-external-links">
                                <div class="list links-list list-outline-ios list-strong-ios list-dividers-ios">
                                    <ul>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Followers Slider -->
            <div class="popup profile-followers-popup three-quarter-popup">
                <div class="page">
                    <div class="navbar">
                        <div class="navbar-inner">
                            <div class="title">Followers</div>
                            <div class="right">
                                <!-- Link to close popup -->
                                <a class="link popup-close"><i class="icon f7-icons">xmark</i></a>
                            </div>
                        </div>
                    </div>
                    <div class="page-content">
                        <div class="notification-list profile-followers-list">
                            <!-- Follower -->
                            <div class="notification-item">
                                <div class="notification-left">
                                    <div class="notification-text">No followers</div>
                                </div>
                            </div>
                            <!-- * Follower -->
                        </div>
                    </div>
                </div>
            </div>
            <!-- * Followers Slider -->
        </div>
    </div>
</template>
<script>
    import {
        getSessionUser,
        getUserById
    } from "../js/api/auth.js";

    import {
        getUserGarage
    } from "../js/api/garage.js";

    import {
        getFollowersForUser,
        maybeFollowUser,
    } from "../js/api/profile.js";

    import { createGarageContent, displayFollowers, fillGridWithPosts, displayProfile } from "../js/profile-ui-helpers.js";
    import { OFFLINE_HTML } from "../js/api/consts.js";

    export default (props, { $, $on, $f7 }) => {
        var userId = null;
        var refreshed = false;
        var pageEl;

        const { store } = $f7;

        $on('pageInit', async (e, page) => {
            pageEl = page.$el;
            const networkErrors = store.getters.checkPoorNetworkError.value;

            if (networkErrors) {
                document.querySelector(`.page[data-name="profile-view"] #profile-view-container`).innerHTML = OFFLINE_HTML;
                return;
            }

            page.$el.find('.user-follow-btn').on('click', async function () {
                const followButton = $(this);
                const isFollowing = followButton.text() === 'Following';

                // change the button text
                followButton.text(isFollowing ? 'Follow' : 'Following');
                const response = await maybeFollowUser(followButton.attr('data-user-id'));

                if (response && response.success) {
                    store.dispatch('updateUserDetails', {
                        external: true
                    });
                }
            });

            userId = page.route.params.id;

            var pathStore = store.getters.getPathData;

            if (!userId || userId === '-1') {
                return;
            }

            const sessionUser = await getSessionUser();

            if (!sessionUser || !sessionUser.id) {
                return;
            }

            // Follow button
            const followButton = page.$el.find('.user-follow-btn');
            const sessionFollowings = sessionUser.following;

            if (sessionFollowings.includes(`${userId}`)) {
                followButton.text('Following');
            } else {
                followButton.text('Follow');
            }

            followButton.attr('data-user-id', userId);

            let cachedData = null;
            try {
                if (pathStore && pathStore.value[`/user/${userId}`]) {
                    cachedData = pathStore.value[`/user/${userId}`];
                }
            } catch (error) {
                console.error('Error fetching cached data:', error);
            }

            await renderProfileData(cachedData, userId, page.$el);
        });

        $on('ptr:refresh', async (e, page) => {
            try {
                refreshed = true;

                store.dispatch('removePathData', `/user/${userId}`);
                store.dispatch('getUserPosts', {
                    user_id: userId,
                    clear: true
                });

                store.dispatch('getUserTags', {
                    user_id: userId,
                    clear: true
                });
                await renderProfileData(null, userId, pageEl);
            } catch (error) {
                console.log('Error refreshing profile page:', error);
            }

            e.detail();
        });

        async function renderProfileData(cachedData, userId, dom) {
            var view = $f7.views.current;

            if (!cachedData) {
                if (!refreshed) {
                    $('.loading-fullscreen').show();
                }

                const data = await getUserById(userId);

                if (!data || data.error) {
                    $('.loading-fullscreen').hide();
                    $f7.dialog.alert('User not found', 'Error');

                    view.router.back(view.history[0], {
                        force: true
                    });
                    return;
                }

                // update .page-content with data-user-id
                dom.find('.page-content').attr('data-user-id', userId);

                displayProfile(data.user, 'profile-view', userId);

                $('.loading-fullscreen').hide();

                store.dispatch('getUserPosts', {
                    user_id: userId,
                    clear: true
                });

                store.dispatch('getUserTags', {
                    user_id: userId,
                    clear: true
                });

                const garage = await getUserGarage(userId);

                if (garage) {
                    createGarageContent(garage, `.page-content[data-user-id="${userId}"] .pview-current-vehicles-list`, `.page-content[data-user-id="${userId}"] .pview-past-vehicles-list`);
                }

                const followersData = await getFollowersForUser(userId);

                $('.pview.profile-followers').attr('data-popup', ".profile-followers-popup");
                $('.pview.profile-followers').addClass('popup-open');

                let followers = null;
                if (followersData && followersData.success) {
                    followers = followersData.followers;
                }

                store.dispatch('setPathData', {
                    path: `/user/${userId}`,
                    data: {
                        user: data.user,
                        garage: garage,
                        followers: followers
                    },
                });

                displayFollowers(followers, data.following || [], 'profile-view', userId);
            } else {
                // update .page-content with data-user-id
                dom.find('.page-content').attr('data-user-id', userId);

                displayProfile(cachedData.user, 'profile-view', userId);

                store.dispatch('getUserPosts', {
                    user_id: userId,
                    clear: true
                });

                store.dispatch('getUserTags', {
                    user_id: userId,
                    clear: true
                });

                if (cachedData.garage) {
                    createGarageContent(cachedData.garage, `.page-content[data-user-id="${userId}"] .pview-current-vehicles-list`, `.page-content[data-user-id="${userId}"] .pview-past-vehicles-list`);
                }

                if (cachedData.followers) {
                    displayFollowers(cachedData.followers, cachedData.user.following || [], 'profile-view', userId);
                }


                $('.pview.profile-followers').attr('data-popup', ".profile-followers-popup");
                $('.pview.profile-followers').addClass('popup-open');
            }

            $('.loading-fullscreen').hide();
            refreshed = false;
        }

        return $render;
    }
</script>